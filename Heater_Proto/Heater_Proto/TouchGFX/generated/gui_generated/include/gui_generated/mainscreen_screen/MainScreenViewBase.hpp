/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINSCREENVIEWBASE_HPP
#define MAINSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/CustomContainer1.hpp>
#include <gui/containers/CustomContainer2.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/Image.hpp>

class MainScreenViewBase : public touchgfx::View<MainScreenPresenter>
{
public:
    MainScreenViewBase();
    virtual ~MainScreenViewBase() {}
    virtual void setupScreen();

    virtual void TenScrollWheelUpdateItem(CustomContainer1& item, int16_t itemIndex)
    {
        // Override and implement this function in MainScreen
    }

    virtual void TenScrollWheelUpdateCenterItem(CustomContainer2& item, int16_t itemIndex)
    {
        // Override and implement this function in MainScreen
    }

    virtual void DigitScrollWheelUpdateItem(CustomContainer1& item, int16_t itemIndex)
    {
        // Override and implement this function in MainScreen
    }

    virtual void DigitScrollWheelUpdateCenterItem(CustomContainer2& item, int16_t itemIndex)
    {
        // Override and implement this function in MainScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::SwipeContainer swipeContainer1;
    touchgfx::Container swipeContainer1Page2;
    touchgfx::Box box3;
    touchgfx::Box box4;
    touchgfx::TextArea textArea3;
    touchgfx::TextAreaWithOneWildcard MinText;
    touchgfx::TextAreaWithOneWildcard SecText;
    touchgfx::BoxWithBorder boxWithBorder2;
    touchgfx::ScrollWheelWithSelectionStyle TenScrollWheel;
    touchgfx::DrawableListItems<CustomContainer1, 4> TenScrollWheelListItems;
    touchgfx::DrawableListItems<CustomContainer2, 2> TenScrollWheelSelectedListItems;

    touchgfx::ScrollWheelWithSelectionStyle DigitScrollWheel;
    touchgfx::DrawableListItems<CustomContainer1, 4> DigitScrollWheelListItems;
    touchgfx::DrawableListItems<CustomContainer2, 2> DigitScrollWheelSelectedListItems;

    touchgfx::TextArea textArea4;
    touchgfx::ToggleButton TimerBtn;
    touchgfx::Line line3;
    touchgfx::PainterRGB565 line3Painter;
    touchgfx::Line line4;
    touchgfx::PainterRGB565 line4Painter;
    touchgfx::Line line2;
    touchgfx::PainterRGB565 line2Painter;
    touchgfx::TextArea textArea7;
    touchgfx::Container swipeContainer1Page1;
    touchgfx::Box box1;
    touchgfx::Box box2;
    touchgfx::TextArea textArea1;
    touchgfx::ButtonWithIcon DownBtn;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::ButtonWithIcon UpBtn;
    touchgfx::ToggleButton RelayBtn;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::TextArea textArea5;
    touchgfx::TextArea textArea6;
    touchgfx::TextAreaWithOneWildcard ReadTempText;
    touchgfx::TextAreaWithOneWildcard ConfigTempText;
    touchgfx::TextArea textArea1_1;
    touchgfx::TextArea textArea1_1_1;
    touchgfx::Image timer_img;
    touchgfx::TextArea textArea8;
    touchgfx::TextArea textArea9;
    touchgfx::TextAreaWithOneWildcard textArea10;
    touchgfx::TextAreaWithOneWildcard textArea11;

    /*
     * Wildcard Buffers
     */
    static const uint16_t MINTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar MinTextBuffer[MINTEXT_SIZE];
    static const uint16_t SECTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar SecTextBuffer[SECTEXT_SIZE];
    static const uint16_t READTEMPTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar ReadTempTextBuffer[READTEMPTEXT_SIZE];
    static const uint16_t CONFIGTEMPTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar ConfigTempTextBuffer[CONFIGTEMPTEXT_SIZE];
    static const uint16_t TEXTAREA10_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea10Buffer[TEXTAREA10_SIZE];
    static const uint16_t TEXTAREA11_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea11Buffer[TEXTAREA11_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MainScreenViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // MAINSCREENVIEWBASE_HPP
